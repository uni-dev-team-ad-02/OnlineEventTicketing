@model OnlineEventTicketing.Models.ViewModels.AdminSalesReportViewModel
@{
    ViewData["Title"] = "Admin Sales Report";
}

<div class="container-fluid fade-in">
    <!-- Header -->
    <div class="row mb-5">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="dashboard-title mb-1">
                        Sales Report
                    </h1>
                    <p class="dashboard-subtitle mb-0">@Model.FormattedReportPeriod</p>
                </div>
                <div class="d-flex gap-2">
                    <form asp-action="ExportSalesReport" method="post" class="d-inline">
                        <input type="hidden" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
                        <button type="submit" class="btn btn-success-custom me-2">
                            <i class="bi bi-download me-2"></i> Export CSV
                        </button>
                    </form>
                    <a asp-action="Index" class="btn btn-primary-custom">
                        <i class="bi bi-arrow-left me-2"></i> Back to Reports
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-4 mb-5 slide-up">
        <div class="col-lg-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-success mb-3">
                        <i class="bi bi-graph-up-arrow"></i>
                    </div>
                    <h3 class="stat-number text-success-custom">@Model.FormattedTotalRevenue</h3>
                    <p class="stat-label mb-0">Total Revenue</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-primary mb-3">
                        <i class="bi bi-ticket-perforated"></i>
                    </div>
                    <h3 class="stat-number text-primary-custom">@Model.TotalTicketsSold.ToString("N0")</h3>
                    <p class="stat-label mb-0">Tickets Sold</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-info mb-3">
                        <i class="bi bi-calendar-event"></i>
                    </div>
                    <h3 class="stat-number text-info-custom">@Model.TotalEvents</h3>
                    <p class="stat-label mb-0">Total Events</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-warning mb-3">
                        <i class="bi bi-currency-dollar"></i>
                    </div>
                    <h3 class="stat-number text-warning-custom">@Model.FormattedAverageTicketPrice</h3>
                    <p class="stat-label mb-0">Avg Ticket Price</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Stats -->
    <div class="row g-4 mb-5">
        <div class="col-lg-4 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-success mb-3">
                        <i class="bi bi-check-circle"></i>
                    </div>
                    <h4 class="stat-number text-success-custom">@Model.ActiveEvents</h4>
                    <p class="stat-label mb-0">Active Events</p>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-users mb-3">
                        <i class="bi bi-people"></i>
                    </div>
                    <h4 class="stat-number text-users-custom">@Model.TotalOrganizers</h4>
                    <p class="stat-label mb-0">Total Organizers</p>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="card stat-card">
                <div class="card-body text-center">
                    <div class="stat-icon stat-icon-warning mb-3">
                        <i class="bi bi-x-circle"></i>
                    </div>
                    <h4 class="stat-number text-warning-custom">@Model.FormattedCancellationRate</h4>
                    <p class="stat-label mb-0">Cancellation Rate</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Daily Sales Chart -->
    @if (Model.DailySales.Any())
    {
        <div class="row mb-5">
            <div class="col-12">
                <div class="card analytics-card">
                    <div class="card-header border-0 bg-transparent">
                        <h5 class="section-title mb-0">
                            Daily Sales Trend
                        </h5>
                    </div>
                    <div class="card-body">
                        <canvas id="dailySalesChart" height="100"></canvas>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Monthly Trends Chart -->
    @if (Model.MonthlyTrends.Any())
    {
        <div class="row mb-5">
            <div class="col-12">
                <div class="card analytics-card">
                    <div class="card-header border-0 bg-transparent">
                        <h5 class="section-title mb-0">
                            Monthly Sales Trends
                        </h5>
                    </div>
                    <div class="card-body">
                        <canvas id="monthlyTrendsChart" height="100"></canvas>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Top Organizers -->
    @if (Model.TopOrganizers.Any())
    {
        <div class="row mb-5">
            <div class="col-12">
                <div class="card analytics-card">
                    <div class="card-header border-0 bg-transparent">
                        <h5 class="section-title mb-0">
                            Top Performing Organizers
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-professional">
                                    <tr>
                                        <th>Organizer</th>
                                        <th>Events</th>
                                        <th>Tickets Sold</th>
                                        <th>Revenue</th>
                                        <th>Avg per Event</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var organizer in Model.TopOrganizers)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@organizer.OrganizerName</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">@organizer.EventsCount</span>
                                            </td>
                                            <td>@organizer.TicketsSold.ToString("N0")</td>
                                            <td>
                                                <strong class="text-success">@organizer.FormattedRevenue</strong>
                                            </td>
                                            <td>@organizer.FormattedAverageRevenuePerEvent</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Category Performance -->
    @if (Model.CategoryPerformance.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card analytics-card">
                    <div class="card-header border-0 bg-transparent">
                        <h5 class="section-title mb-0">
                            Category Performance
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-professional">
                                    <tr>
                                        <th>Category</th>
                                        <th>Events</th>
                                        <th>Tickets Sold</th>
                                        <th>Revenue</th>
                                        <th>Market Share</th>
                                        <th>Avg per Event</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var category in Model.CategoryPerformance)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@category.Category</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@category.EventsCount</span>
                                            </td>
                                            <td>@category.TicketsSold.ToString("N0")</td>
                                            <td>
                                                <strong class="text-success">@category.FormattedRevenue</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-warning text-dark">@category.FormattedMarketShare</span>
                                            </td>
                                            <td>@category.FormattedAverageRevenuePerEvent</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Daily Sales Chart
        @if (Model.DailySales.Any())
        {
            <text>
            const dailySalesCtx = document.getElementById('dailySalesChart').getContext('2d');
            new Chart(dailySalesCtx, {
                type: 'line',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.DailySales.Select(d => $"'{d.FormattedDate}'")))],
                    datasets: [{
                        label: 'Revenue',
                        data: [@string.Join(",", Model.DailySales.Select(d => d.Revenue))],
                        backgroundColor: 'rgba(25, 135, 84, 0.1)',
                        borderColor: 'rgba(25, 135, 84, 1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4
                    }, {
                        label: 'Tickets Sold',
                        data: [@string.Join(",", Model.DailySales.Select(d => d.TicketsSold))],
                        backgroundColor: 'rgba(13, 110, 253, 0.1)',
                        borderColor: 'rgba(13, 110, 253, 1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        yAxisID: 'y1'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                    }
                }
            });
            </text>
        }

        // Monthly Trends Chart
        @if (Model.MonthlyTrends.Any())
        {
            <text>
            const monthlyTrendsCtx = document.getElementById('monthlyTrendsChart').getContext('2d');
            new Chart(monthlyTrendsCtx, {
                type: 'bar',
                data: {
                    labels: [@Html.Raw(string.Join(",", Model.MonthlyTrends.Select(m => $"'{m.Month}'")))],
                    datasets: [{
                        label: 'Revenue',
                        data: [@string.Join(",", Model.MonthlyTrends.Select(m => m.Revenue))],
                        backgroundColor: 'rgba(25, 135, 84, 0.8)',
                        borderColor: 'rgba(25, 135, 84, 1)',
                        borderWidth: 1
                    }, {
                        label: 'Tickets Sold',
                        data: [@string.Join(",", Model.MonthlyTrends.Select(m => m.TicketsSold))],
                        backgroundColor: 'rgba(13, 110, 253, 0.8)',
                        borderColor: 'rgba(13, 110, 253, 1)',
                        borderWidth: 1,
                        yAxisID: 'y1'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        }
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                    }
                }
            });
            </text>
        }
    </script>
}

